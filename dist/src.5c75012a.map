{"version":3,"sources":["core\\game.ts","config.ts","core\\screen.ts","core\\math\\mathf.ts","core\\math\\vector2.ts","core\\math\\vector3.ts","core\\transform.ts","core\\camera.ts","core\\input.ts","core\\main.ts","core\\resource-manager.ts","core\\text.ts","platformer\\scenes\\title-scene.ts","index.ts"],"names":[],"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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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A,QAAA,IAAA,GAAA,IAAA,EAAA,IAAA,GAAA;AACA,QAAA,IAAA,GAAA,IAAA,EAAA,IAAA,GAAA;AACA,QAAA,IAAA,GAAA,IAAA,EAAA,IAAA,GAAA;AACA,QAAA,IAAA,GAAA,IAAA,EAAA,IAAA,GAAA;AACA,QAAA,IAAA,GAAA,IAAA,EAAA,IAAA,GAAA;AACA,QAAA,IAAA,GAAA,IAAA,EAAA,IAAA,GAAA;AACA,QAAA,IAAA,GAAA,IAAA,EAAA,IAAA,GAAA;AACA,QAAA,IAAA,GAAA,IAAA,EAAA,IAAA,GAAA;AACA,QAAA,IAAA,GAAA,IAAA,EAAA,IAAA,GAAA;AACA,QAAA,IAAA,GAAA,IAAA,EAAA,IAAA,GAAA;AACA,QAAA,IAAA,GAAA,IAAA,EAAA,IAAA,GAAA;AACA,QAAA,IAAA,GAAA,IAAA,EAAA,IAAA,GAAA;AACA,QAAA,IAAA,GAAA,IAAA,EAAA,IAAA,GAAA;AACA,QAAA,IAAA,GAAA,IAAA,EAAA,IAAA,GAAA;AACA,QAAA,IAAA,UAAA,IAAA,EAAA,IAAA,UAAA;AACA,QAAA,IAAA,WAAA,IAAA,EAAA,IAAA,WAAA;AACA,QAAA,IAAA,QAAA,IAAA,EAAA,IAAA,QAAA;AACA,QAAA,IAAA,UAAA,IAAA,EAAA,IAAA,UAAA;AACA,QAAA,IAAA,SAAA,IAAA,EAAA,IAAA,SAAA;AACA,QAAA,IAAA,SAAA,IAAA,EAAA,IAAA,SAAA;AACA,QAAA,IAAA,WAAA,IAAA,EAAA,IAAA,WAAA;AACA,QAAA,IAAA,UAAA,IAAA,GAAA,IAAA,UAAA;AACA,QAAA,IAAA,UAAA,IAAA,GAAA,IAAA,UAAA;AACA,QAAA,IAAA,SAAA,IAAA,GAAA,IAAA,SAAA;AACA,QAAA,IAAA,WAAA,IAAA,GAAA,IAAA,WAAA;AACA,QAAA,IAAA,WAAA,IAAA,GAAA,IAAA,WAAA;AACA,QAAA,IAAA,UAAA,IAAA,GAAA,IAAA,UAAA;AACA,QAAA,IAAA,UAAA,IAAA,GAAA,IAAA,UAAA;AACA,QAAA,IAAA,KAAA,IAAA,GAAA,IAAA,KAAA;AACA,QAAA,IAAA,UAAA,IAAA,GAAA,IAAA,UAAA;AACA,QAAA,IAAA,SAAA,IAAA,GAAA,IAAA,SAAA;AACA,QAAA,IAAA,QAAA,IAAA,GAAA,IAAA,QAAA;AACA,QAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA;AACA,QAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA;AACA,QAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA;AACA,QAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA;AACA,QAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA;AACA,QAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA;AACA,QAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA;AACA,QAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA;AACA,QAAA,IAAA,IAAA,IAAA,GAAA,IAAA,IAAA;AACA,QAAA,IAAA,KAAA,IAAA,GAAA,IAAA,KAAA;AACA,QAAA,IAAA,KAAA,IAAA,GAAA,IAAA,KAAA;AACA,QAAA,IAAA,KAAA,IAAA,GAAA,IAAA,KAAA;AACA,QAAA,IAAA,UAAA,IAAA,GAAA,IAAA,UAAA;AACA,QAAA,IAAA,aAAA,IAAA,GAAA,IAAA,aAAA;AACA,QAAA,IAAA,WAAA,IAAA,GAAA,IAAA,WAAA;AACA,QAAA,IAAA,QAAA,IAAA,GAAA,IAAA,QAAA;AACA,QAAA,IAAA,OAAA,IAAA,GAAA,IAAA,OAAA;AACA,QAAA,IAAA,MAAA,IAAA,GAAA,IAAA,MAAA;AACA,QAAA,IAAA,QAAA,IAAA,GAAA,IAAA,QAAA;AACA,QAAA,IAAA,eAAA,IAAA,GAAA,IAAA,eAAA;AACA,QAAA,IAAA,cAAA,IAAA,GAAA,IAAA,cAAA;AACA,QAAA,IAAA,cAAA,IAAA,GAAA,IAAA,cAAA;AACA,QAAA,IAAA,YAAA,IAAA,GAAA,IAAA,YAAA;AACA,QAAA,IAAA,eAAA,IAAA,GAAA,IAAA,eAAA;AACA,QAAA,IAAA,cAAA,IAAA,GAAA,IAAA,cAAA;AACD,CApGD,EAAY,MAAA,QAAA,GAAA,KAAA,QAAA,GAAA,GAAG,EAAH,CAAZ;AAsGA,IAAA,gBAAA,aAAA,YAAA;AAAA,aAAA,aAAA,GAAA;AACU,aAAA,QAAA,GAAW,IAAI,GAAJ,EAAX;AACA,aAAA,YAAA,GAAe,IAAI,GAAJ,EAAf;AAgCT;AA9BQ,kBAAA,SAAA,CAAA,MAAA,GAAP,UAAc,OAAd,EAA0B;AACxB,eAAO,KAAK,QAAL,CAAc,GAAd,CAAkB,OAAlB,CAAP;AACD,KAFM;AAIA,kBAAA,SAAA,CAAA,OAAA,GAAP,UAAe,OAAf,EAA2B;AACzB,eAAO,KAAK,QAAL,CAAc,GAAd,CAAkB,OAAlB,KAA8B,CAAC,KAAK,YAAL,CAAkB,GAAlB,CAAsB,OAAtB,CAAtC;AACD,KAFM;AAIA,kBAAA,SAAA,CAAA,IAAA,GAAP,UAAY,OAAZ,EAAwB;AACtB,eAAO,CAAC,KAAK,QAAL,CAAc,GAAd,CAAkB,OAAlB,CAAR;AACD,KAFM;AAIA,kBAAA,SAAA,CAAA,QAAA,GAAP,UAAgB,OAAhB,EAA4B;AAC1B,eAAO,CAAC,KAAK,QAAL,CAAc,GAAd,CAAkB,OAAlB,CAAD,IAA+B,KAAK,YAAL,CAAkB,GAAlB,CAAsB,OAAtB,CAAtC;AACD,KAFM;AAIA,kBAAA,SAAA,CAAA,SAAA,GAAP,UAAiB,KAAjB,EAAqC;AACnC,aAAK,QAAL,CAAc,GAAd,CAAkB,MAAM,OAAxB;AACA,cAAM,cAAN;AACD,KAHM;AAKA,kBAAA,SAAA,CAAA,OAAA,GAAP,UAAe,KAAf,EAAmC;AACjC,aAAK,QAAL,CAAc,QAAd,EAAqB,MAAM,OAA3B;AACA,cAAM,cAAN;AACD,KAHM;AAKA,kBAAA,SAAA,CAAA,KAAA,GAAP,YAAA;AAAA,YAAA,QAAA,IAAA;AACE,aAAK,YAAL,CAAkB,KAAlB;AACA,aAAK,QAAL,CAAc,OAAd,CAAsB,UAAA,CAAA,EAAC;AAAI,mBAAA,MAAK,YAAL,CAAkB,GAAlB,CAAsB,CAAtB,CAAA;AAAwB,SAAnD;AACD,KAHM;AAIT,WAAA,aAAA;AAlCA,CAAA,EAAA;AAoCa,QAAA,aAAA,GAAgB,IAAI,aAAJ,EAAhb,IAAM,SAAS,IAAI,GAAJ,EAAf;AAEA,SAAA,QAAA,CAAyB,IAAzB,EAAqC;AACnC,WAAO,OAAO,GAAP,CAAW,IAAX,CAAP;AACD;AAFD,QAAA,QAAA,GAAA,QAAA;AAIA,SAAA,SAAA,CAA0B,IAA1B,EAAwC,IAAxC,EAAoD;AAClD,QAAM,MAAM,IAAI,KAAJ,EAAZ;AACA,QAAI,GAAJ,GAAU,IAAV;AACA,WAAO,GAAP,CAAW,IAAX,EAAiB,GAAjaAAA,CAAA;AACA,IAAA,SAAA,gBAAA,QAAA,aAAA,CAAA,CAAA;AACA,IAAA,kBAAA,aAAA,QAAA,yBAAA,CAAA,CAAA;AACA,IAAA,gBAAA,gBAAA,QAAA,iCAAA,CAAA,CAAA;AACA;AAEA,IAAA,kBAAA,gBAAA,QAAA,6CAAA,CAAA,CAAA;AAEA;AACA,gBAAgB,SAAhB,CAA0B,MAA1B,EAAkC,gBAAA,SAAA,CAAlC;AAEA,OAAA,SAAA;AACA,OAAA,IAAA,CAAK,WAAL,CAAiB,cAAA,SAAA,CAAjB","file":"src.5c75012a.map","sourceRoot":"..\\src","sourcesContent":["import { IScene, ISceneConstructor } from './scene'\r\n\r\nclass Game {\r\n  public currentScreen?: IScene\r\n\r\n  public SetUpScreen(sceneType: ISceneConstructor) {\r\n    const mOldScreen = this.currentScreen\r\n    const newScreen = new sceneType(mOldScreen)\r\n    this.currentScreen = newScreen\r\n  }\r\n}\r\n\r\nexport const game: Game = new Game()\r\n","export const DEBUG = true\r\nexport const FPS_LIST_SIZE = 20\r\n","export interface IResolution {\r\n  height: number\r\n  width: number\r\n}\r\n\r\nexport default class Screen {\r\n  public static UpdateScreen() {\r\n    Screen._height = document.documentElement.clientHeight\r\n    Screen._width = document.documentElement.clientWidth\r\n    Screen._dpr = window.devicePixelRatio\r\n  }\r\n\r\n  public static get height() {\r\n    return Screen._height\r\n  }\r\n\r\n  public static get width() {\r\n    return Screen._width\r\n  }\r\n\r\n  public static get dpr() {\r\n    return Screen._dpr\r\n  }\r\n\r\n  public static get resolution(): IResolution {\r\n    return {\r\n      height: Screen._height,\r\n      width: Screen._width,\r\n    }\r\n  }\r\n\r\n  private static _dpr: number\r\n  private static _height: number\r\n  private static _width: number\r\n}\r\n","export const EPSILON = 0.00001\r\nexport const RANDOM = Math.random\r\n\r\nconst DEG2RAD = Math.PI / 180\r\nconst RAD2DEG = 180 / Math.PI\r\n\r\nexport function toRadian(a: number) {\r\n  return a * DEG2RAD\r\n}\r\n\r\nexport function Lerp(a: number, b: number, t: number) {\r\n  return LerpUnclamped(a, b, Clamp01(t))\r\n}\r\n\r\nexport function LerpUnclamped(a: number, b: number, t: number) {\r\n  return (1 - t) * a + t * b\r\n}\r\n\r\nexport function Approximately(a: number, b: number, tolerance = EPSILON) {\r\n  return Math.abs(a - b) <= tolerance * Math.max(1.0, Math.abs(a), Math.abs(b))\r\n}\r\n\r\nexport function Clamp(value: number, min: number, max: number) {\r\n  return Math.max(Math.min(value, max), min)\r\n}\r\n\r\nexport function Clamp01(value: number) {\r\n  return Clamp(value, 0, 1)\r\n}\r\n\r\nexport function Max(a: number, b: number) {\r\n  return Math.max(a, b)\r\n}\r\n\r\nexport function Min(a: number, b: number) {\r\n  return Math.min(a, b)\r\n}\r\n","import * as Mathf from './mathf'\r\n\r\nexport default class Vector2 {\r\n  public static get down() {\r\n    return new Vector2(0, -1)\r\n  }\r\n  public static get left() {\r\n    return new Vector2(-1, 0)\r\n  }\r\n  public static get negativeInfinity() {\r\n    return new Vector2(Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY)\r\n  }\r\n  public static get one() {\r\n    return new Vector2(1, 1)\r\n  }\r\n  public static get positiveInfinity() {\r\n    return new Vector2(Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY)\r\n  }\r\n  public static get right() {\r\n    return new Vector2(1, 0)\r\n  }\r\n  public static get up() {\r\n    return new Vector2(0, 1)\r\n  }\r\n  public static get zero() {\r\n    return new Vector2(0, 0)\r\n  }\r\n\r\n  public static Angle(from: Vector2, to: Vector2) {\r\n    const cosTheta = Vector2.Dot(from, to) / (from.magnitude * to.magnitude)\r\n    return Math.acos(cosTheta)\r\n  }\r\n\r\n  public static ClampMagnitude(\r\n    vector: Vector2,\r\n    maxLength: number,\r\n    dest?: Vector2\r\n  ) {\r\n    if (!dest) {\r\n      dest = new Vector2()\r\n    }\r\n    const mag = vector.sqrMagnitude\r\n    if (mag > maxLength ** 2) {\r\n      dest.x = (vector.x * maxLength) / Math.sqrt(mag)\r\n      dest.y = (vector.y * maxLength) / Math.sqrt(mag)\r\n    } else {\r\n      dest.xy = vector.xy\r\n    }\r\n    return dest\r\n  }\r\n\r\n  public static Distance(a: Vector2, b: Vector2) {\r\n    const x = new Vector2(b.x - a.x, b.y - a.y)\r\n    return x.magnitude\r\n  }\r\n\r\n  public static Dot(lhs: Vector2, rhs: Vector2) {\r\n    return lhs.x * rhs.x + lhs.y * rhs.y\r\n  }\r\n\r\n  public static Lerp(a: Vector2, b: Vector2, t: number, dest?: Vector2) {\r\n    if (!dest) {\r\n      dest = new Vector2()\r\n    }\r\n    dest.x = Mathf.Lerp(a.x, b.x, t)\r\n    dest.y = Mathf.Lerp(a.y, b.y, t)\r\n    return dest\r\n  }\r\n\r\n  public static LerpUnclamped(\r\n    a: Vector2,\r\n    b: Vector2,\r\n    t: number,\r\n    dest?: Vector2\r\n  ) {\r\n    if (!dest) {\r\n      dest = new Vector2()\r\n    }\r\n    dest.x = Mathf.LerpUnclamped(a.x, b.x, t)\r\n    dest.y = Mathf.LerpUnclamped(a.y, b.y, t)\r\n    return dest\r\n  }\r\n\r\n  public static Max(a: Vector2, b: Vector2, dest?: Vector2) {\r\n    if (!dest) {\r\n      dest = new Vector2()\r\n    }\r\n    dest.x = Mathf.Max(a.x, b.x)\r\n    dest.y = Mathf.Max(a.y, b.y)\r\n    return dest\r\n  }\r\n\r\n  public static Min(a: Vector2, b: Vector2, dest?: Vector2) {\r\n    if (!dest) {\r\n      dest = new Vector2()\r\n    }\r\n    dest.x = Mathf.Min(a.x, b.x)\r\n    dest.y = Mathf.Min(a.y, b.y)\r\n    return dest\r\n  }\r\n\r\n  public static Perpendicular(inDirection: Vector2) {\r\n    // TODO\r\n    throw new Error('Not implemented')\r\n  }\r\n\r\n  public static Reflect(inDirection: Vector2, inNormal: Vector2) {\r\n    // TODO\r\n    throw new Error('Not implemented')\r\n  }\r\n\r\n  public static SignedAngle(from: Vector2, to: Vector2) {\r\n    // TODO\r\n    throw new Error('Not implemented')\r\n  }\r\n\r\n  public static Sum(lhs: Vector2, rhs: Vector2, dest?: Vector2) {\r\n    if (!dest) {\r\n      dest = new Vector2()\r\n    }\r\n    dest.x = lhs.x + rhs.x\r\n    dest.y = lhs.y + rhs.y\r\n    return dest\r\n  }\r\n\r\n  public static Product(lhs: Vector2, rhs: Vector2, dest?: Vector2) {\r\n    if (!dest) {\r\n      dest = new Vector2()\r\n    }\r\n    dest.x = lhs.x * rhs.x\r\n    dest.y = lhs.y * rhs.y\r\n    return dest\r\n  }\r\n\r\n  public static Difference(lhs: Vector2, rhs: Vector2, dest?: Vector2) {\r\n    if (!dest) {\r\n      dest = new Vector2()\r\n    }\r\n    dest.x = lhs.x - rhs.x\r\n    dest.y = lhs.y - rhs.y\r\n    return dest\r\n  }\r\n\r\n  public static Quotient(lhs: Vector2, rhs: Vector2, dest?: Vector2) {\r\n    if (!dest) {\r\n      dest = new Vector2()\r\n    }\r\n    dest.x = lhs.x / rhs.x\r\n    dest.y = lhs.y / rhs.y\r\n    return dest\r\n  }\r\n\r\n  public x: number\r\n  public y: number\r\n\r\n  public get xy() {\r\n    return [this.x, this.y]\r\n  }\r\n  public set xy(value: number[]) {\r\n    this.x = value[0]\r\n    this.y = value[1]\r\n  }\r\n\r\n  constructor(x: number = 0, y: number = 0) {\r\n    this.x = x\r\n    this.y = y\r\n  }\r\n\r\n  public get magnitude() {\r\n    return Math.sqrt(this.x ** 2 + this.y ** 2)\r\n  }\r\n\r\n  public get normalized() {\r\n    return new Vector2(this.x / this.magnitude, this.y / this.magnitude)\r\n  }\r\n\r\n  public get sqrMagnitude() {\r\n    return this.x ** 2 + this.y ** 2\r\n  }\r\n\r\n  public Equals(other: Vector2) {\r\n    return this.x === other.x && this.y === other.y\r\n  }\r\n\r\n  public Normalize() {\r\n    const m = this.magnitude\r\n    this.x /= m\r\n    this.y /= m\r\n  }\r\n\r\n  public toString() {\r\n    return `<Vector2 (${this.x}, ${this.y})>`\r\n  }\r\n}\r\n","import * as Mathf from './mathf'\r\nimport Vector2 from './vector2'\r\n\r\nexport default class Vector3 {\r\n  public static get back() {\r\n    return new Vector3(0, 0, -1)\r\n  }\r\n  public static get down() {\r\n    return new Vector3(0, -1, 0)\r\n  }\r\n  public static get forward() {\r\n    return new Vector3(0, 0, 1)\r\n  }\r\n  public static get left() {\r\n    return new Vector3(-1, 0, 0)\r\n  }\r\n  public static get negativeInfinity() {\r\n    return new Vector3(\r\n      Number.NEGATIVE_INFINITY,\r\n      Number.NEGATIVE_INFINITY,\r\n      Number.NEGATIVE_INFINITY\r\n    )\r\n  }\r\n  public static get one() {\r\n    return new Vector3(1, 1, 1)\r\n  }\r\n  public static get positiveInfinity() {\r\n    return new Vector3(\r\n      Number.POSITIVE_INFINITY,\r\n      Number.POSITIVE_INFINITY,\r\n      Number.POSITIVE_INFINITY\r\n    )\r\n  }\r\n  public static get right() {\r\n    return new Vector3(1, 0, 0)\r\n  }\r\n  public static get up() {\r\n    return new Vector3(0, 1, 0)\r\n  }\r\n  public static get zero() {\r\n    return new Vector3(0, 0, 0)\r\n  }\r\n\r\n  public static Angle(from: Vector3, to: Vector3) {\r\n    const cosTheta = Vector3.Dot(from, to) / (from.magnitude * to.magnitude)\r\n    return Math.acos(cosTheta)\r\n  }\r\n\r\n  public static ClampMagnitude(\r\n    vector: Vector3,\r\n    maxLength: number,\r\n    dest?: Vector3\r\n  ) {\r\n    if (!dest) {\r\n      dest = new Vector3()\r\n    }\r\n    const mag = vector.sqrMagnitude\r\n    if (mag > maxLength ** 2) {\r\n      const m = Math.sqrt(mag)\r\n      dest.x = (vector.x * maxLength) / m\r\n      dest.y = (vector.y * maxLength) / m\r\n      dest.z = (vector.z * maxLength) / m\r\n    } else {\r\n      dest.xyz = vector.xyz\r\n    }\r\n    return dest\r\n  }\r\n\r\n  public static Cross(lhs: Vector3, rhs: Vector3, dest?: Vector3) {\r\n    if (!dest) {\r\n      dest = new Vector3()\r\n    }\r\n    dest.x = lhs.x * rhs.z - lhs.z * rhs.y\r\n    dest.y = lhs.z * rhs.x - lhs.x * rhs.z\r\n    dest.z = lhs.x * rhs.y - lhs.y * rhs.x\r\n    return dest\r\n  }\r\n\r\n  public static Distance(a: Vector3, b: Vector3) {\r\n    const x = new Vector3(b.x - a.x, b.y - a.y, a.z - b.z)\r\n    return x.magnitude\r\n  }\r\n\r\n  public static Dot(lhs: Vector3, rhs: Vector3) {\r\n    return lhs.x * rhs.x + lhs.y * rhs.y + lhs.z * rhs.z\r\n  }\r\n\r\n  public static Lerp(a: Vector3, b: Vector3, t: number, dest?: Vector3) {\r\n    if (!dest) {\r\n      dest = new Vector3()\r\n    }\r\n    dest.x = Mathf.Lerp(a.x, b.x, t)\r\n    dest.y = Mathf.Lerp(a.y, b.y, t)\r\n    dest.z = Mathf.Lerp(a.z, b.z, t)\r\n    return dest\r\n  }\r\n\r\n  public static LerpUnclamped(\r\n    a: Vector3,\r\n    b: Vector3,\r\n    t: number,\r\n    dest?: Vector3\r\n  ) {\r\n    if (!dest) {\r\n      dest = new Vector3()\r\n    }\r\n    dest.x = Mathf.LerpUnclamped(a.x, b.x, t)\r\n    dest.y = Mathf.LerpUnclamped(a.y, b.y, t)\r\n    dest.z = Mathf.LerpUnclamped(a.z, b.z, t)\r\n    return dest\r\n  }\r\n\r\n  public static Max(a: Vector3, b: Vector3, dest?: Vector3) {\r\n    if (!dest) {\r\n      dest = new Vector3()\r\n    }\r\n    dest.x = Mathf.Max(a.x, b.x)\r\n    dest.y = Mathf.Max(a.y, b.y)\r\n    dest.z = Mathf.Max(a.z, b.z)\r\n    return dest\r\n  }\r\n\r\n  public static Min(a: Vector3, b: Vector3, dest?: Vector3) {\r\n    if (!dest) {\r\n      dest = new Vector3()\r\n    }\r\n    dest.x = Mathf.Min(a.x, b.x)\r\n    dest.y = Mathf.Min(a.y, b.y)\r\n    dest.z = Mathf.Min(a.z, b.z)\r\n    return dest\r\n  }\r\n\r\n  public static Project(vector: Vector3, onNormal: Vector3, dest?: Vector3) {\r\n    if (!dest) {\r\n      dest = new Vector3()\r\n    }\r\n    dest.xyz = onNormal.xyz\r\n    const num = Vector3.Dot(onNormal, onNormal)\r\n    if (num < Mathf.EPSILON) {\r\n      return Vector3.zero\r\n    }\r\n    const scalar = Vector3.Dot(vector, onNormal) / num\r\n    dest.x *= scalar\r\n    dest.y *= scalar\r\n    dest.z *= scalar\r\n    return dest\r\n  }\r\n\r\n  public static ProjectOnPlane(vector: Vector3, planeNormal: Vector3) {\r\n    return Vector3.Difference(vector, Vector3.Project(vector, planeNormal))\r\n  }\r\n\r\n  public static Reflect(inDirection: Vector3, inNormal: Vector3) {\r\n    // TODO\r\n    throw new Error('Not implemented')\r\n  }\r\n\r\n  public static SignedAngle(from: Vector3, to: Vector3) {\r\n    // TODO\r\n    throw new Error('Not implemented')\r\n  }\r\n\r\n  public static Slerp(a: Vector3, b: Vector3, t: number, dest?: Vector3) {\r\n    // TODO\r\n    throw new Error('Not implemented')\r\n  }\r\n\r\n  public static SlerpUnclamped(\r\n    a: Vector3,\r\n    b: Vector3,\r\n    t: number,\r\n    dest?: Vector3\r\n  ) {\r\n    // TODO\r\n    throw new Error('Not implemented')\r\n  }\r\n\r\n  public static Sum(lhs: Vector3, rhs: Vector3, dest?: Vector3) {\r\n    if (!dest) {\r\n      dest = new Vector3()\r\n    }\r\n    dest.x = lhs.x + rhs.x\r\n    dest.y = lhs.y + rhs.y\r\n    dest.z = lhs.z + rhs.z\r\n    return dest\r\n  }\r\n\r\n  public static Product(lhs: Vector3, rhs: Vector3, dest?: Vector3) {\r\n    if (!dest) {\r\n      dest = new Vector3()\r\n    }\r\n    dest.x = lhs.x * rhs.x\r\n    dest.y = lhs.y * rhs.y\r\n    dest.z = lhs.z * rhs.z\r\n    return dest\r\n  }\r\n\r\n  public static Difference(lhs: Vector3, rhs: Vector3, dest?: Vector3) {\r\n    if (!dest) {\r\n      dest = new Vector3()\r\n    }\r\n    dest.x = lhs.x - rhs.x\r\n    dest.y = lhs.y - rhs.y\r\n    dest.z = lhs.z - rhs.z\r\n    return dest\r\n  }\r\n\r\n  public static Quotient(lhs: Vector3, rhs: Vector3, dest?: Vector3) {\r\n    if (!dest) {\r\n      dest = new Vector3()\r\n    }\r\n    dest.x = lhs.x / rhs.x\r\n    dest.y = lhs.y / rhs.y\r\n    dest.z = lhs.z / rhs.z\r\n    return dest\r\n  }\r\n\r\n  public x: number\r\n  public y: number\r\n  public z: number\r\n\r\n  public get xy() {\r\n    return [this.x, this.y]\r\n  }\r\n  public set xy(value: number[]) {\r\n    this.x = value[0]\r\n    this.y = value[1]\r\n  }\r\n\r\n  public get yz() {\r\n    return [this.y, this.z]\r\n  }\r\n  public set yz(value: number[]) {\r\n    this.y = value[0]\r\n    this.z = value[1]\r\n  }\r\n\r\n  public get xyz() {\r\n    return [this.x, this.y, this.z]\r\n  }\r\n  public set xyz(value: number[]) {\r\n    this.x = value[0]\r\n    this.y = value[1]\r\n    this.z = value[2]\r\n  }\r\n\r\n  constructor(x = 0, y = 0, z = 0) {\r\n    this.x = x\r\n    this.y = y\r\n    this.z = z\r\n  }\r\n\r\n  public get magnitude() {\r\n    return Math.sqrt(this.x ** 2 + this.y ** 2 + this.z ** 2)\r\n  }\r\n\r\n  public get normalized() {\r\n    return new Vector3(\r\n      this.x / this.magnitude,\r\n      this.y / this.magnitude,\r\n      this.z / this.magnitude\r\n    )\r\n  }\r\n\r\n  public get sqrMagnitude() {\r\n    return this.x ** 2 + this.y ** 2 + this.z ** 2\r\n  }\r\n\r\n  public Equals(other: Vector3) {\r\n    return (\r\n      Mathf.Approximately(this.x, other.x) &&\r\n      Mathf.Approximately(this.y, other.y) &&\r\n      Mathf.Approximately(this.z, other.z)\r\n    )\r\n  }\r\n\r\n  public Normalize() {\r\n    const m = this.magnitude\r\n    this.x /= m\r\n    this.y /= m\r\n    this.z /= m\r\n  }\r\n\r\n  public toString() {\r\n    return `<Vector3 (${this.x}, ${this.y}, ${this.z})>`\r\n  }\r\n}\r\n","import Vector2 from './math/vector2'\r\nimport Vector3 from './math/vector3'\r\n\r\nexport default class Transform {\r\n  public position: Vector3\r\n  public rotation: number\r\n  public scale: Vector2\r\n\r\n  constructor() {\r\n    this.position = Vector3.zero\r\n    this.rotation = 0\r\n    this.scale = Vector2.one\r\n  }\r\n}","import Screen from './screen'\r\nimport Transform from './transform'\r\n\r\n\r\nexport default class Camera {\r\n  private static _main = new Camera()\r\n\r\n  public static get main() {\r\n    return Camera._main\r\n  }\r\n\r\n  public static set main(newCamera: Camera) {\r\n    Camera._main = newCamera\r\n  }\r\n\r\n  public transform: Transform\r\n  public zoom: number\r\n\r\n  constructor() {\r\n    this.transform = new Transform()\r\n    this.zoom = 1\r\n  }\r\n\r\n  public begin(ctx: CanvasRenderingContext2D) {\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    this.applyScreenTranslation(ctx)\r\n    this.applyScale(ctx)\r\n    this.applyTranslation(ctx)\r\n  }\r\n\r\n  public end(ctx: CanvasRenderingContext2D) {\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n  }\r\n\r\n  private applyScale(ctx: CanvasRenderingContext2D) {\r\n    ctx.scale(this.zoom, this.zoom)\r\n  }\r\n\r\n  private applyScreenTranslation(ctx: CanvasRenderingContext2D) {\r\n    ctx.translate(Screen.width / 2, Screen.height / 2)\r\n  }\r\n\r\n  private applyTranslation(ctx: CanvasRenderingContext2D) {\r\n    ctx.translate(-this.transform.position.x, -this.transform.position.y)\r\n  }\r\n}","export enum Key {\r\n  BACKSPACE = 8,\r\n  TAB = 9,\r\n  ENTER = 13,\r\n  SHIFT = 16,\r\n  CTRL = 17,\r\n  ALT = 18,\r\n  PAUSE_BREAK = 19,\r\n  CAPS_LOCK = 20,\r\n  ESCAPE = 27,\r\n  SPACE = 32,\r\n  PAGE_UP = 33,\r\n  PAGE_DOWN = 34,\r\n  END = 35,\r\n  HOME = 36,\r\n  LEFT_ARROW = 37,\r\n  UP_ARROW = 38,\r\n  RIGHT_ARROW = 39,\r\n  DOWN_ARROW = 40,\r\n  INSERT = 45,\r\n  DELETE = 46,\r\n  ZERO = 48,\r\n  ONE = 49,\r\n  TWO = 50,\r\n  THREE = 51,\r\n  FOUR = 52,\r\n  FIVE = 53,\r\n  SIX = 54,\r\n  SEVEN = 55,\r\n  EIGHT = 56,\r\n  NINE = 57,\r\n  A = 65,\r\n  B = 66,\r\n  C = 67,\r\n  D = 68,\r\n  E = 69,\r\n  F = 70,\r\n  G = 71,\r\n  H = 72,\r\n  I = 73,\r\n  J = 74,\r\n  K = 75,\r\n  L = 76,\r\n  M = 77,\r\n  N = 78,\r\n  O = 79,\r\n  P = 80,\r\n  Q = 81,\r\n  R = 81,\r\n  S = 83,\r\n  T = 84,\r\n  U = 85,\r\n  V = 86,\r\n  W = 87,\r\n  X = 88,\r\n  Y = 89,\r\n  Z = 90,\r\n  WIN_LEFT = 91,\r\n  WIN_RIGHT = 92,\r\n  SELECT = 93,\r\n  NUM_ZERO = 96,\r\n  NUM_ONE = 97,\r\n  NUM_TWO = 98,\r\n  NUM_THREE = 99,\r\n  NUM_FOUR = 100,\r\n  NUM_FIVE = 101,\r\n  NUM_SIX = 102,\r\n  NUM_SEVEN = 103,\r\n  NUM_EIGHT = 104,\r\n  NUM_NINE = 105,\r\n  MULTIPLY = 106,\r\n  ADD = 107,\r\n  SUBTRACT = 109,\r\n  DECIMAL = 110,\r\n  DIVIDE = 111,\r\n  F1 = 112,\r\n  F2 = 113,\r\n  F3 = 114,\r\n  F4 = 115,\r\n  F5 = 116,\r\n  F6 = 117,\r\n  F7 = 118,\r\n  F8 = 119,\r\n  F9 = 120,\r\n  F10 = 121,\r\n  F11 = 122,\r\n  F12 = 123,\r\n  NUM_LOCK = 144,\r\n  SCROLL_LOCK = 145,\r\n  SEMICOLON = 186,\r\n  EQUALS = 187,\r\n  COMMA = 188,\r\n  DASH = 189,\r\n  PERIOD = 190,\r\n  FORWARD_SLASH = 191,\r\n  GRAVE_ACCENT = 192,\r\n  OPEN_BRACKET = 219,\r\n  BACK_SLASH = 220,\r\n  CLOSE_BRACKET = 221,\r\n  SINGLE_QUOTE = 222,\r\n}\r\n\r\nclass CInputManager {\r\n  private _pressed = new Set<Key>()\r\n  private _lastPressed = new Set<Key>()\r\n\r\n  public isDown(keyCode: Key) {\r\n    return this._pressed.has(keyCode)\r\n  }\r\n\r\n  public pressed(keyCode: Key) {\r\n    return this._pressed.has(keyCode) && !this._lastPressed.has(keyCode)\r\n  }\r\n\r\n  public isUp(keyCode: Key) {\r\n    return !this._pressed.has(keyCode)\r\n  }\r\n\r\n  public released(keyCode: Key) {\r\n    return !this._pressed.has(keyCode) && this._lastPressed.has(keyCode)\r\n  }\r\n\r\n  public onKeydown(event: KeyboardEvent) {\r\n    this._pressed.add(event.keyCode)\r\n    event.preventDefault()\r\n  }\r\n\r\n  public onKeyup(event: KeyboardEvent) {\r\n    this._pressed.delete(event.keyCode)\r\n    event.preventDefault()\r\n  }\r\n\r\n  public flush() {\r\n    this._lastPressed.clear()\r\n    this._pressed.forEach(k => this._lastPressed.add(k))\r\n  }\r\n}\r\n\r\nexport const INPUT_MANAGER = new CInputManager()\r\n","import * as config from '../config'\r\nimport Camera from './camera'\r\nimport { game } from './game'\r\nimport { INPUT_MANAGER } from './input'\r\nimport Screen from './screen'\r\n\r\nexport default function init() {\r\n  const canvas = document.getElementById('canvas') as HTMLCanvasElement\r\n  const ctx = canvas.getContext('2d')\r\n\r\n  const resizeCanvas = () => {\r\n    canvas.width = Screen.width\r\n    canvas.height = Screen.height\r\n  }\r\n\r\n  resizeCanvas()\r\n\r\n  ctx.imageSmoothingEnabled = false\r\n  ctx.textBaseline = 'middle'\r\n\r\n  let last = -1\r\n  const fpsList = [0]\r\n\r\n  window.addEventListener('keyup', event => INPUT_MANAGER.onKeyup(event))\r\n  window.addEventListener('keydown', event => INPUT_MANAGER.onKeydown(event))\r\n\r\n  const gameloop = (timestamp: number) => {\r\n    let inc = 0\r\n    if (last) {\r\n      inc = timestamp - last\r\n    }\r\n    last = timestamp\r\n\r\n    Screen.UpdateScreen()\r\n    resizeCanvas()\r\n\r\n    ctx.clearRect(0, 0, Screen.width, Screen.height)\r\n\r\n    game.currentScreen.update(inc)\r\n    Camera.main.begin(ctx)\r\n    game.currentScreen.draw(ctx, inc)\r\n    Camera.main.end(ctx)\r\n\r\n    if (config.DEBUG) {\r\n      fpsList.push(inc)\r\n      if (fpsList.length > config.FPS_LIST_SIZE) {\r\n        fpsList.shift()\r\n        ctx.fillStyle = 'white'\r\n        ctx.font = '1em \"Arial\"'\r\n        const avgFPS = fpsList.reduce((x, y) => x + y, 0) / config.FPS_LIST_SIZE\r\n        ctx.fillText(`FPS: ${(1000 / avgFPS).toFixed(3)}`, 50, 50)\r\n      }\r\n    }\r\n\r\n    INPUT_MANAGER.flush()\r\n\r\n    window.requestAnimationFrame(gameloop)\r\n  }\r\n\r\n  window.requestAnimationFrame(gameloop)\r\n}\r\n","const images = new Map<string, HTMLImageElement>()\r\n\r\nexport function getImage(name: string) {\r\n  return images.get(name)\r\n}\r\n\r\nexport function loadImage(name: string, path: string) {\r\n  const img = new Image()\r\n  img.src = path\r\n  images.set(name, img)\r\n}\r\n","import { IDrawable } from './rendering'\r\nimport Screen from './screen'\r\nimport Transform from './transform';\r\n\r\nexport enum Alignment {\r\n  Left,\r\n  Center,\r\n  Right,\r\n}\r\n\r\nexport enum TextAnchor {\r\n  UpperLeft,\r\n  UpperCenter,\r\n  UpperRight,\r\n  MiddleLeft,\r\n  MiddleCenter,\r\n  MiddleRight,\r\n  LowerLeft,\r\n  LowerCenter,\r\n  LowerRight,\r\n}\r\n\r\nexport default class Text implements IDrawable {\r\n  public alignment: Alignment\r\n  public anchor: TextAnchor\r\n  public characterSize: number\r\n  public color: string // TODO: Color class\r\n  public font: string\r\n  public fontSize: string\r\n  public fontStyle: 'normal' | 'italic' | 'oblique'\r\n  public fontVariant: 'normal' | 'small-caps'\r\n  public fontWeight: 'normal' | 'bold' | 'bolder' | 'lighter'\r\n  public lineSpacing?: string\r\n  public text: string\r\n  public transform: Transform\r\n\r\n  constructor() {\r\n    this.alignment = Alignment.Left\r\n    this.anchor = TextAnchor.MiddleCenter\r\n    this.characterSize = 1\r\n    this.color = 'white'\r\n    this.font = 'Arial'\r\n    this.fontSize = '16pt'\r\n    this.fontStyle = 'normal'\r\n    this.fontVariant = 'normal'\r\n    this.fontWeight = 'normal'\r\n    this.lineSpacing = undefined\r\n    this.text = ''\r\n    this.transform = new Transform()\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D, deltaTime: number): void {\r\n    ctx.fillStyle = this.color\r\n    const fontSizeAndSpacing = this.lineSpacing\r\n      ? `${this.fontSize}/${this.lineSpacing}`\r\n      : this.fontSize\r\n    ctx.font = `${this.fontStyle} ${this.fontVariant} ${\r\n      this.fontWeight\r\n    } ${fontSizeAndSpacing} \"${this.font}\"`\r\n    // TODO: Positioning based on alignment, anchor, character size\r\n    ctx.fillText(\r\n      this.text,\r\n      this.transform.position.x - (ctx.measureText(this.text).width / 2), this.transform.position.y + 2\r\n    )\r\n  }\r\n}\r\n","import Camera from  '../../core/camera'\r\nimport Vector3 from '../../core/math/vector3';\r\nimport { IScene } from '../../core/scene'\r\nimport Text from '../../core/text'\r\n\r\nexport default class TitleScene implements IScene {\r\n  private titleText: Text\r\n  private zoomLevel = 10\r\n  private zoomDirection = 1\r\n  private theta = 0\r\n\r\n  private maxZoomLevel = 13\r\n  private minZoomLevel = 10\r\n\r\n  constructor() {\r\n    this.titleText = new Text()\r\n    this.titleText.text = 'Platformer'\r\n    this.titleText.fontSize = '12pt'\r\n  }\r\n\r\n  public name() {\r\n    return 'Title Screen'\r\n  }\r\n\r\n  public update(deltaTime: number) {\r\n    this.zoomLevel += this.zoomDirection * deltaTime / 1000\r\n    this.theta += deltaTime / 1000\r\n    if (this.zoomLevel >= this.maxZoomLevel) {\r\n      this.zoomDirection = -1\r\n      this.zoomLevel = this.maxZoomLevel\r\n    }\r\n    if (this.zoomLevel <= this.minZoomLevel) {\r\n      this.zoomDirection = 1\r\n      this.zoomLevel = this.minZoomLevel\r\n    }\r\n    Camera.main.zoom = this.zoomLevel\r\n    Camera.main.transform.position = new Vector3(Math.cos(this.theta) * 10, Math.sin(this.theta) * 10, 0)\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D, deltaTime: number) {\r\n    this.titleText.draw(ctx, deltaTime)\r\n  }\r\n}\r\n","import { game } from './core/game'\r\nimport init from './core/main'\r\nimport * as ResourceManager from './core/resource-manager'\r\nimport TitleScene from './platformer/scenes/title-scene'\r\n/// <reference path=\"./typings/images.d.ts\" />\r\n\r\nimport alicURL from './platformer/resources/images/alic_face.png'\r\n\r\n// Load all resources\r\nResourceManager.loadImage('alic', alicURL as string)\r\n\r\ninit()\r\ngame.SetUpScreen(TitleScene)\r\n"]}